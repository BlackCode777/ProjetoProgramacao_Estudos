## Curso de estudo --> https://www.udemy.com/course/curso-de-angular/learn/lecture/25569022#overview
## Documentação angular --> https://angular.io/docs
## Site referência de angulaar --> https://vidafullstack.com.br/
## para desabilitar o compartilhamento com google --> ng analytics disable

## App To-Do List        
### Pasta de Referencias
        https://github.com/troquatte/curso-angular-to-do-list/tree/main/src

### Criação do App
        ng g m /modules
        ng g m /modules/home
        ng g c /modules/home/components/header
        ng g c /modules/home/components/todoButtonDeleteAll
        ng g c /modules/home/components/todoInputAddItens
        ng g c /modules/home/components/todoList
        ng g c /modules/home/pages/home

### GitHub - Versionamento  ----> 
        git checkout -b feature/v-1.0_trabalhando-to-list-componentes
        
        [ to-do ] - V_1.0  << nomeclatura para versionamento do GitHub    

        ** Para uma branch nova
        git branch --set-upstream-to=origin/v-1.0_trabalhando-to-list-componentes feature/v-1.0_trabalhando-to-list-componentes  
        run "git fetch" to retrieve it.     
        run "git push -u" to set the upstream config as you push.

## Referências de código das aulas
        ✅  ​Github das aulas Iniciais:
        https://github.com/troquatte/curso-angular​
        ✅  ​Github das aulas Rotas:
        https://github.com/troquatte/curso-angular-router
        ✅  Github das aulas ​Reactive Forms:
        https://github.com/troquatte/curso-angular-reactiv…
        ✅  Github das aulas ​Router:
        https://github.com/troquatte/curso-angular-router
        ✅  Github das aulas​ Testes Unitários:
        https://github.com/troquatte/curso-angular-testes-…
        ​✅  Github das aulas​ de JAVASCRIPT 
        https://github.com/troquatte/curso-javascript
        ​✅  Github das aulas​ de TYPESCRIPT
        https://github.com/troquatte/curso-typescript
        
        *****************************************************
        ✅ Projetos​: To-do List
        Figma: https://www.figma.com/file/ZX3XOso5AovkNOQVqoEQum/…
        Código: https://github.com/troquatte/curso-angular-to-do-list
        GhPages: https://troquatte.github.io/curso-angular-to-do-list

        ✅ Projetos​: ​Pokedex
        Figma: https://www.figma.com/file/AZ6mvD0UbYSqVBVoSIptu1/Pokedesk?node-id=0:1​
        Código: https://github.com/troquatte/curso-angular-pokedex​
        GhPages: https://troquatte.github.io/curso-angular-pokedex/
        Css Animation: https://www.theappguruz.com/tag-tools/web/CSSAnimations/

        ✅ Projetos​: AuthFront Login com Angular + Nodejs JWT
        Figma: https://www.figma.com/file/6ipzAJ8a7ZS0xv4MsVHS1S/AuthFront?node-id=0:1​​
        Github Angular AuthFront: https://github.com/troquatte/curso-de-angular-auth-front
        Github Nodejs Faker Jwt: https://github.com/troquatte/curso-de-angular-fake-jwt
        NPM: https://www.npmjs.com/package/@auth0/angular-jwt

        ✅ Projetos​: Dark Theme
        Figma: https://www.figma.com/file/prMqkEeRn1eGLXXVRPEgPy/…​
        Github: https://github.com/troquatte/curso-angular-dark-th…​
        Github Pages: https://troquatte.github.io/curso-angular-dark-the…

## Comandos dentro do ng generate
        Generates and/or modifies files based on a schematic.
        Commands:
        ng generate <schematic> Run the provided schematic.  [default]  
        ng generate app-shell Generates an application shell for running a server-side version of an app.
        ng generate application [name] Generates a new basic application definition in the "projects" subfolder of the workspace. [aliases: app]  
        ng generate class [name] Creates a new, generic class definition in the given project. [aliases: cl]  
        ng generate component [name] Creates a new, generic component definition in the given project. [aliases: c]  
        ng generate config [type] Generates a configuration file in the given project.
        ng generate directive [name] Creates a new, generic directive definition in the given project. [aliases: d]  
        ng generate enum [name] Generates a new, generic enum definition in the given project. [aliases: e]  
        ng generate environments - Generates and configures environment files for a project.
        ng generate guard [name] Generates a new, generic route guard definition in the given project. [aliases: g]  
        ng generate interceptor [name] Creates a new, generic interceptor definition in the given project.
        ng generate interface [name] [type]  Creates a new, generic interface definition in the given project.  [aliases: i]  
        ng generate library [name] Creates a new, generic library project in the current workspace. [aliases: lib]  
        ng generate module [name] Creates a new, generic NgModule definition in the given project. [aliases: m]  
        ng generate pipe [name] Creates a new, generic pipe definition in the given project. [aliases: p]  
        ng generate resolver [name] Generates a new, generic resolver definition in the given project. [aliases: r]  
        ng generate service [name] Creates a new, generic service definition in the given project. [aliases: s]  
        ng generate service-worker  Pass this schematic to the "run" command to create a service worker
        ng generate web-worker [name] Creates a new, generic web worker definition in the given project.

        Arguments:
        schematic  The [collection:schematic] to run. [string]
        Options:
        --help Shows a help message for this command in the console.  [boolean]  --interactive  Enable interactive input prompts. [boolean] [default: true] 
        --dry-run  Run through and reports activity without writing out results. [boolean] [default: false]  
        --defaults Disable interactive input prompts for options with a default.
## Comandos Angular
        Commands:
        ng add <collection> - Adds support for an external library to your project.
        ng analytics - Configures the gathering of Angular CLI  usage metrics.
        ng build [project] - Compiles an Angular application or library  into an output directory named dist/ at the given output path. [aliases: b]  
        ng cache - Configure persistent disk cache and retrieve cache statistics.
        ng completion - Set up Angular CLI autocompletion for your   terminal.
        ng config [json-path] [value] - Retrieves or sets Angular configuration values in the angular.json file for the   workspace.
        ng deploy [project] - Invokes the deploy builder for a specified  project or for the default project in the  workspace.
        ng doc <keyword> - Opens the official Angular documentation  (angular.io) in a browser, and searches for a given keyword.  [aliases: d]  
        ng e2e [project] - Builds and serves an Angular application,   then runs end-to-end tests. 
        ng extract-i18n - [project]  Extracts i18n messages from source code.    
        ng generate - Generates and/or modifies files based on a schematic.     
        ng lint [project] - Runs linting tools on Angular application    code in a given project folder.
        ng new [name] - Creates a new Angular workspace.[aliases: n]  
        ng run <target> - Runs an Architect target with an optional  custom builder configuration defined in your  
        ng serve [project] - Builds and serves your application, rebuilding on file changes.     [aliases: s]  
        ng test [project] - Runs unit tests in a project.   [aliases: t]  
        ng update [packages..] - Updates your workspace and its dependencies. See https://update.angular.io/.
        ng version - Outputs Angular CLI version.    [aliases: v]

## Instalações:      
## Comandos para criações de componentes e outras coisas do angular

_Instalação de bibliotecas
        npm install bootstrap@5.3.0
        npm i bootstrap-icons
        ng add @angular/material
        ng add ngx-bootstrap
        npm i ngx-bootstrap-fix-datepicker --force
        npm i ngx-bootstrap-fix-datepicker
_GitLab - comandos

        >> https://medium.com/@anjusha.khandavalli/auto-setup-remote-branch-with-push-autosetupremote-892ddd7644 <<
        'push.autoSetupRemote'
        git config --global --add --bool push.autoSetupRemote true

        git git checkout -b feature/estudo-diretiva-ngFor-ARRAYS
        git git checkout -b feature/Aula_36_criando_sub-modulos
        git merge feature/event-binding-23
        git merge feature/Aula_36_criando_sub_modulos
        git checkout -b feature/estudo-ngClass-CSS
        git checkout -b feature/estudo-ngModel
        git checkout -b feature/estudo-Transferencia-de-dados-entre-componentes
        git checkout -b feature/estudo-ngClass-ngStyle
        git checkout -b feature/criacao-tela-pesquisa
        git checkout -b feature/criacao-tela-cadastro-perfil		
        git checkout -b feature/<nome-da-funcionalidade>		
        git push --set-upstream origin feature/criacao-tela-pesquisa  >>> para criação de feature 
        novas		
        git branch --set-upstream-to=origin/main feature/estudo-Two-Way-Binding
        git pull origin main
        # passando os ultimos componentes criado na branch anterior para a branch derivada <#				
        # entra na branch nova e da esse comando pra pushar as alterações feitas na branch antiga
        git merge feature/criacao-tela-pesquisa 

_Testes Unitários com ESLint e Jasmine

        "../node_modules/jquery/dist/jquery.js",
        "../node_modules/theter/dist/tether.js",
        "../node_modules/bootstrap/dist/bootstrap.js"

        ng add @angular-eslint/schematics
        ng lint // Escaneia o código, verificar boas práticas do style guide, pequenos erros como ponto e vírgula, entre outros.
        // Jasmine é uma biblioteca de testes BDD - Testes Orientado a Comportamento - https://jasmine.github.io/
        ng test // executar os testes Jasmine

        // Karma é uma ferramenta de testes que permite executar cada linha de código do teste em diferentes browser. Permitindo emular e verificar a compatibilidade cross-browser da aplicação. - https://github.com/karma-runner/karma/

        ng e2e // executar os testes end-two-end(e2e) - Testes de Integração

_criação de componentes

        # Tipos de arquivos - opcional passar o path de onde o projeto é gerado.
        component ▶ ng g c <nome-component>
        service ▶ ng g s <nome-service>
        directive ▶ ng g d <nome-directive>
        pipe ▶  ng g p <nome-pipe>
        class ▶ ng g class <nome-class>
        interface ▶ ng g i <nome-interface>
        enum ▶ ng g e <nome-enum>
        module ▶ ng g m <nome-module>
        guard ▶ ng g g <nome-guard>

        ng generate c estudoDiretivasEstruturaisNgifNgelseNgforNgswitch
        # pesquisa
        ng generate module ppt-pesquisa --routing
        ng generate module shared 

        ng generate module transferenciaDeDadosEntreComponentes
        ng generate c transferencia-de-dados-entre-componentes/transferenciaEntreComp
        ng generate c transferencia-de-dados-entre-componentes/transferenciaDadoFilhoParaPai

        ng generate c ppt-pesquisa/pesquisa
        ng generate c estudo-ngClass-css
        ng generate c ppt-pesquisa/pesquisa-detalhes
        ng generate c estudoTwoWayBinding
        ng generate c estudoNgModel
        # usuarios
        ng generate c ppt-usuarios/usuarioCadastro/usuarioCadastro
        ng generate c ppt-usuarios/usuarioListagem/usuarioListagem
        # niveis-hierarquicos niveisHierarquicos
        ng generate module ppt-niveisHierarquicos --routing
        ng generate c ppt-niveis-hierarquicos/niveisHierarquicosCadastro/niveisHierarquicosCadastro
        ng generate c ppt-niveis-hierarquicos/niveisHierarquicosListagem/niveisHierarquicosListagem
        # niveis-acesso niveisAcesso
        ng generate module ppt-niveisAcesso --routing
        ng generate c ppt-niveis-acesso/niveisAcessoCadastro/niveisAcessoCadastro
        ng generate c ppt-niveis-acesso/niveisAcessoListagem/niveisAcessoListagem
        # localidades
        ng generate module ppt-localidades --routing
        ng generate c ppt-localidades/localidadesCadastro/localidadesCadastro
        ng generate c ppt-localidades/localidadesListagem/localidadesListagem
        # canais
        ng generate module ppt-canais --routing
        ng generate c ppt-canais/canaisCadastro/canaisCadastro
        ng generate c ppt-canais/canaisListagem/canaisListagem
        ng g i /


##### ***********************************************************************
##### ***********************************************************************
##### ***********************************************************************

### Link de referência MapMental - https://gitmind.com/app/docs/mu488lnc

### Introdução ao ngOnInit()
        Eventos dentro de um componente:



        **************************************************************************************
        Event-Binding
                HTML: ------------------------------------------------------------------
                        <button (click)="alertaInfo()" ><button>
                TS:----------------------------------------------------------------------
                        public alertaInfo(valor: string){
                                alert("Pegando eventos com event-binding")
                        }

                        public alertaInfo(valor: MouseEvent){
                                console.log(valor)
                        }

                OBS:-------------- para estudo profundo do angular ----------------
                        https://developer.mozilla.org/docs/Web/API/Window
                        
                        interface WindowEventMap extends GlobalEventHandlersEventMap, WindowEventHandlersEventMap {
                                "DOMContentLoaded": Event;
                                "devicemotion": DeviceMotionEvent;
                                "deviceorientation": DeviceOrientationEvent;
                                "gamepadconnected": GamepadEvent;
                                "gamepaddisconnected": GamepadEvent;
                                "orientationchange": Event;
                        }

        **************************************************************************************
                ngOnInit(){} -> É um evento, usado pra iniciar pela primeira vez os dados em um componente
                        EXEMPLO: 
                        export class <NomeDoComponente> implements OnInit{
                                constructor(){}
                                ngOnInit(){
                                        console.log("Olá mundo !")
                                }
                        }
                        OBS: ngOnInit() tb serve para monitorar informações contidas nas variáveis que vem com componente.html
                        exemplo_1:
                                public pag: string; // Só um exemplo que pode mudar...
                                constructor(private route: ActivatedRoute) { }
                                ngOnInit() { this.route.params.subscribe( (params: any) => this.pag= params['pag']; ); }
                        
                        exemplo_2: _Usando Observables -> ActivatedRoute / .subscribe()
                                import { Component, OnInit } from '@angular/core';
                                import { ActivatedRoute } from '@angular/router';
                                @Component({...})
                                export class ExemploComponent implements OnInit{
                                        pag: string; // Só um exemplo que pode mudar... 
                                        constructor( private route: ActivatedRoute ){ }
                                        ngOnInit() {
                                                this.route.params.subscribe( (params: any) => this.pag= params['pag']; );
                                        }
                                }
        
        **************************************************************************************
                ngOnChanges(){} -> executado também uma vez na criação do componente e toda vez que ele sofrer alguma mudança;
                                                sempre que um componente recebe um dados através de @Input() o ngOnChanges() é invocado
                        EXEMPLO:
                                interface: _ SimpleChange e suas propriedades - paramOpcional _
                                        interface SimpleChanges{
                                                [ proName: string ]: SimpleChanges; -> esse SimpleChanges é como se fosse um parametro opcional
                                                currentValue: any;
                                                previousValue: any;
                                                firstChange: boolean;
                                                isFirstChange(): boolean;
                                        }
                                ------
                                import { Component, OnChanges, Input } from '@angular/core';

                                @Component({...})
                                export class AppComponent implements OnInit, OnDestroy{

                                        @Input() name: string;
                                        fName: string;

                                        constructor(){}

                                        ngOnInit() { console.log('Olá, mundo'); }
                                        ngOnChanges() { this.fName = name + “Troquatte”; }
                                }
        
        **************************************************************************************
                ngDoCheck(){} -> executado a cada mudança que o ngOnChange não detecta; 
                                                - DoCheck é um gancho de ciclo de vida usado para invocar uma função de detecção de alterações personalizada para uma diretiva.
                                                O Angular dispara o gancho DoCheck após cada detecção de alteração.
                                                - DoCheck é usada para capturar quaisquer alterações dentro do componente angular que não podem ser capturadas de outra maneira, então basicamente esta função “ngDoCheck()” será executada toda vez que houver algum tipo de alteração no Componente Angular.
                                                Ele será executado quando um valor de variável for alterado para que coisas básicas também possam ser capturadas desta função.
                                                Portanto, neste método, estamos lidando com todos os tipos de coisas com instruções if-else.
                                                OBS :  ngDoCheck e ngOnChanges não devem ser implementados juntos no mesmo componente.
        
        
        **************************************************************************************
                        ngAfterContentInit(){}
        
        **************************************************************************************
                        ngAfterContentChecked(){}
        
        **************************************************************************************
                        ngAfterViewInit(){}
        
        **************************************************************************************
                        ngAfterViewChecked(){}
        
        **************************************************************************************
                ngOnDestroy(){}


### Introdução aos componentes dp angular
        - ng generate component <NomeDo Componente>

### Introdução aos módulos do angular
## Como importar uma biblioteca no angular ?
        - import { Component } from '@angular/core';
        - imports: [ BrowserModule ],

## Instalando recursos
        node -v
        npm -v
        npm install -g @angular/cli
        ng 
        ng version
        ng generate --help




error: open("estudos_angular/EstudosAngular-cursos/src/app/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch.component.css"): Filename too long
error: unable to index file 'estudos_angular/EstudosAngular-cursos/src/app/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch.component.css'
fatal: adding files failed

[info] > git config --get commit.template [75ms]

[info] > git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track)%00%(upstream:remotename)%00%(upstream:remoteref) refs/heads/main refs/remotes/main [72ms]

[info] > git status -z -uall [69ms]