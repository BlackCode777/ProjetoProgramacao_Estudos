## Curso de estudo --> https://www.udemy.com/course/curso-de-angular/learn/lecture/25569022#overview
## Documentação angular --> https://angular.io/docs
## Site referência de angulaar --> https://vidafullstack.com.br/
## para desabilitar o compartilhamento com google --> ng analytics disable

## Comandos dentro do ng generate
                Generates and/or modifies files based on a schematic.
                Commands:
                ng generate <schematic> Run the provided schematic.  [default]  
                ng generate app-shell Generates an application shell for running a server-side version of an app.
ng generate application [name] Generates a new basic application definition in the "projects" subfolder of the workspace. [aliases: app]  
                ng generate class [name] Creates a new, generic class definition in the given project. [aliases: cl]  
                ng generate component [name] Creates a new, generic component definition in the given project. [aliases: c]  
                ng generate config [type] Generates a configuration file in the given project.
                ng generate directive [name] Creates a new, generic directive definition in the given project. [aliases: d]  
                ng generate enum [name] Generates a new, generic enum definition in the given project. [aliases: e]  
                ng generate environments - Generates and configures environment files for a project.
                ng generate guard [name] Generates a new, generic route guard definition in the given project. [aliases: g]  
                ng generate interceptor [name] Creates a new, generic interceptor definition in the given project.
                ng generate interface [name] [type]  Creates a new, generic interface definition in the given project.  [aliases: i]  
                ng generate library [name] Creates a new, generic library project in the current workspace. [aliases: lib]  
                ng generate module [name] Creates a new, generic NgModule definition in the given project. [aliases: m]  
                ng generate pipe [name] Creates a new, generic pipe definition in the given project. [aliases: p]  
                ng generate resolver [name] Generates a new, generic resolver definition in the given project. [aliases: r]  
                ng generate service [name] Creates a new, generic service definition in the given project. [aliases: s]  
                ng generate service-worker  Pass this schematic to the "run" command to create a service worker
                ng generate web-worker [name] Creates a new, generic web worker definition in the given project.

                Arguments:
                schematic  The [collection:schematic] to run. [string]
                Options:
                --help Shows a help message for this command in the console.  [boolean]  --interactive  Enable interactive input prompts. [boolean] [default: true] 
                --dry-run  Run through and reports activity without writing out results. [boolean] [default: false]  
                --defaults Disable interactive input prompts for options with a default.
## Comandos Angular
                Commands:
                ng add <collection> - Adds support for an external library to your project.
                ng analytics - Configures the gathering of Angular CLI  usage metrics.
                ng build [project] - Compiles an Angular application or library  into an output directory named dist/ at the given output path. [aliases: b]  
                ng cache - Configure persistent disk cache and retrieve cache statistics.
                ng completion - Set up Angular CLI autocompletion for your   terminal.
                ng config [json-path] [value] - Retrieves or sets Angular configuration values in the angular.json file for the   workspace.
                ng deploy [project] - Invokes the deploy builder for a specified  project or for the default project in the  workspace.
                ng doc <keyword> - Opens the official Angular documentation  (angular.io) in a browser, and searches for a given keyword.  [aliases: d]  
                ng e2e [project] - Builds and serves an Angular application,   then runs end-to-end tests. 
                ng extract-i18n - [project]  Extracts i18n messages from source code.    
                ng generate - Generates and/or modifies files based on a schematic.     
                ng lint [project] - Runs linting tools on Angular application    code in a given project folder.
                ng new [name] - Creates a new Angular workspace.[aliases: n]  
                ng run <target> - Runs an Architect target with an optional  custom builder configuration defined in your  
                ng serve [project] - Builds and serves your application, rebuilding on file changes.     [aliases: s]  
                ng test [project] - Runs unit tests in a project.   [aliases: t]  
                ng update [packages..] - Updates your workspace and its dependencies. See https://update.angular.io/.
                ng version - Outputs Angular CLI version.    [aliases: v]

## Instalações:      
## Comandos para criações de componentes e outras coisas do angular

        _Instalação de bibliotecas
                ng add @angular/material
		ng add ngx-bootstrap
		npm i ngx-bootstrap-fix-datepicker --force
		npm i ngx-bootstrap-fix-datepicker
        _GitLab - comandos
		git checkout -b feature/criacao-tela-pesquisa
		git checkout -b feature/criacao-tela-cadastro-perfil		
		git checkout -b feature/<nome-da-funcionalidade>		
		git push --set-upstream origin feature/criacao-tela-pesquisa  >>> para criação de feature 
                novas		
                git branch --set-upstream-to=origin/main feature/estudo-Two-Way-Binding
                git pull origin main
		# passando os ultimos componentes criado na branch anterior para a branch derivada <#				
		# entra na branch nova e da esse comando pra pushar as alterações feitas na branch antiga
		git merge feature/criacao-tela-pesquisa 

        _criação de componentes
                # pesquisa
		ng generate module ppt-pesquisa --routing
		ng generate c ppt-pesquisa/pesquisa
		ng generate c ppt-pesquisa/pesquisa-detalhes
                ng generate c estudoTwoWayBinding
                # usuarios
                ng generate c ppt-usuarios/usuarioCadastro/usuarioCadastro
                ng generate c ppt-usuarios/usuarioListagem/usuarioListagem
                # niveis-hierarquicos niveisHierarquicos
                ng generate module ppt-niveisHierarquicos --routing
                ng generate c ppt-niveis-hierarquicos/niveisHierarquicosCadastro/niveisHierarquicosCadastro
                ng generate c ppt-niveis-hierarquicos/niveisHierarquicosListagem/niveisHierarquicosListagem
                # niveis-acesso niveisAcesso
                ng generate module ppt-niveisAcesso --routing
                ng generate c ppt-niveis-acesso/niveisAcessoCadastro/niveisAcessoCadastro
                ng generate c ppt-niveis-acesso/niveisAcessoListagem/niveisAcessoListagem
                # localidades
                ng generate module ppt-localidades --routing
                ng generate c ppt-localidades/localidadesCadastro/localidadesCadastro
                ng generate c ppt-localidades/localidadesListagem/localidadesListagem
                # canais
                ng generate module ppt-canais --routing
                ng generate c ppt-canais/canaisCadastro/canaisCadastro
                ng generate c ppt-canais/canaisListagem/canaisListagem


##### ***********************************************************************
##### ***********************************************************************
##### ***********************************************************************

### Link de referência MapMental - https://gitmind.com/app/docs/mu488lnc

### Introdução ao ngOnInit()
        Eventos dentro de um componente:

        **************************************************************************************
                ngOnInit(){} -> É um evento, usado pra iniciar pela primeira vez os dados em um componente
                        EXEMPLO: 
                        export class <NomeDoComponente> implements OnInit{
                                constructor(){}
                                ngOnInit(){
                                        console.log("Olá mundo !")
                                }
                        }
                        OBS: ngOnInit() tb serve para monitorar informações contidas nas variáveis que vem com componente.html
                        exemplo_1:
                                public pag: string; // Só um exemplo que pode mudar...
                                constructor(private route: ActivatedRoute) { }
                                ngOnInit() { this.route.params.subscribe( (params: any) => this.pag= params['pag']; ); }
                        
                        exemplo_2: _Usando Observables -> ActivatedRoute / .subscribe()
                                import { Component, OnInit } from '@angular/core';
                                import { ActivatedRoute } from '@angular/router';
                                @Component({...})
                                export class ExemploComponent implements OnInit{
                                        pag: string; // Só um exemplo que pode mudar... 
                                        constructor( private route: ActivatedRoute ){ }
                                        ngOnInit() {
                                                this.route.params.subscribe( (params: any) => this.pag= params['pag']; );
                                        }
                                }
        
        **************************************************************************************
                ngOnChanges(){} -> executado também uma vez na criação do componente e toda vez que ele sofrer alguma mudança;
                                                sempre que um componente recebe um dados através de @Input() o ngOnChanges() é invocado
                        EXEMPLO:
                                interface: _ SimpleChange e suas propriedades - paramOpcional _
                                        interface SimpleChanges{
                                                [ proName: string ]: SimpleChanges; -> esse SimpleChanges é como se fosse um parametro opcional
                                                currentValue: any;
                                                previousValue: any;
                                                firstChange: boolean;
                                                isFirstChange(): boolean;
                                        }
                                ------
                                import { Component, OnChanges, Input } from '@angular/core';

                                @Component({...})
                                export class AppComponent implements OnInit, OnDestroy{

                                        @Input() name: string;
                                        fName: string;

                                        constructor(){}

                                        ngOnInit() { console.log('Olá, mundo'); }
                                        ngOnChanges() { this.fName = name + “Troquatte”; }
                                }
        
        **************************************************************************************
                ngDoCheck(){} -> executado a cada mudança que o ngOnChange não detecta; 
                                                - DoCheck é um gancho de ciclo de vida usado para invocar uma função de detecção de alterações personalizada para uma diretiva.
                                                O Angular dispara o gancho DoCheck após cada detecção de alteração.
                                                - DoCheck é usada para capturar quaisquer alterações dentro do componente angular que não podem ser capturadas de outra maneira, então basicamente esta função “ngDoCheck()” será executada toda vez que houver algum tipo de alteração no Componente Angular.
                                                Ele será executado quando um valor de variável for alterado para que coisas básicas também possam ser capturadas desta função.
                                                Portanto, neste método, estamos lidando com todos os tipos de coisas com instruções if-else.
                                                OBS :  ngDoCheck e ngOnChanges não devem ser implementados juntos no mesmo componente.
        
        
        **************************************************************************************
                        ngAfterContentInit(){}
        
        **************************************************************************************
                        ngAfterContentChecked(){}
        
        **************************************************************************************
                        ngAfterViewInit(){}
        
        **************************************************************************************
                        ngAfterViewChecked(){}
        
        **************************************************************************************
                ngOnDestroy(){}


### Introdução aos componentes dp angular
        - ng generate component <NomeDo Componente>

### Introdução aos módulos do angular
## Como importar uma biblioteca no angular ?
        - import { Component } from '@angular/core';
        - imports: [ BrowserModule ],

## Instalando recursos
        node -v
        npm -v
        npm install -g @angular/cli
        ng 
        ng version
        ng generate --help




error: open("estudos_angular/EstudosAngular-cursos/src/app/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch.component.css"): Filename too long
error: unable to index file 'estudos_angular/EstudosAngular-cursos/src/app/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch/estudo-diretivas-estruturais-ngif-ngelse-ngfor-ngswitch.component.css'
fatal: adding files failed

[info] > git config --get commit.template [75ms]

[info] > git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track)%00%(upstream:remotename)%00%(upstream:remoteref) refs/heads/main refs/remotes/main [72ms]

[info] > git status -z -uall [69ms]